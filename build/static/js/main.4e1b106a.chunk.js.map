{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/types.js","redux/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","name","number","type","actionTypes","payload","id","uuidv4","value","ContactForm","nameInputId","telInputId","state","changeInput","e","inputName","currentTarget","setState","handleFormSubmit","preventDefault","Boolean","props","existContacts","find","element","alert","onSubmit","resetInput","this","className","styles","contactForm","htmlFor","contactForm__label","contactForm__title","contactForm__input","pattern","title","required","onChange","contactForm__button","Component","connect","contacts","items","dispatch","data","actions","contactsForList","allContacts","normalizedFilter","toLowerCase","filter","includes","getVisibleContacts","onDeleteContact","contactList","map","contact","contactList__item","contactList__elem","contactList__button","onClick","onFilterValue","filter__title","filter__input","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e1b106a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"Filter_filter__title__bvaaz\",\"filter__input\":\"Filter_filter__input__1ukD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__fHpCv\",\"contactForm__label\":\"ContactForm_contactForm__label__2vY7F\",\"contactForm__input\":\"ContactForm_contactForm__input__1rNVk\",\"contactForm__title\":\"ContactForm_contactForm__title__3hAWK\",\"contactForm__button\":\"ContactForm_contactForm__button__2_luW\"};","//eslint-disable-next-line\r\nexport default {\r\n    ADD:'contacts/add',\r\n    DELETE:'contacts/delete',\r\n    CHANGE_FILTER:'contacts/changeFilter',\r\n}","import actionTypes from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id:uuidv4()\r\n  },\r\n});\r\n\r\nconst deleteContact = id => ({\r\n  type: actionTypes.DELETE,\r\n  payload: id,\r\n});\r\n\r\nconst changeFilter = (value)=> ({\r\ntype: actionTypes.CHANGE_FILTER,\r\npayload: value,\r\n})\r\n\r\n//eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\nimport actions from '../../redux/contactsActions';\r\n\r\nclass ContactForm extends Component {\r\n  nameInputId = uuidv4();\r\n  telInputId = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    \r\n  };\r\n\r\n  changeInput = e => {\r\n    const inputName = e.currentTarget.name;\r\n    this.setState({\r\n      [inputName]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const checkContact = Boolean(\r\n      this.props.existContacts.find(\r\n        element => element.name === this.state.name,\r\n      ),\r\n    );\r\n\r\n    checkContact\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onSubmit(this.state);\r\n\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleFormSubmit}>\r\n        <label htmlFor={this.nameInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}>Name:</span>\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.telInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}> Phone:</span>\r\n          <input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            value={number}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.contactForm__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList/ContactList.module.css';\r\nimport actions from '../../redux/contactsActions';\r\n\r\nconst ContactList = ({ contactsForList, onDeleteContact }) => (\r\n  <ul className={styles.contactList}>\r\n    {contactsForList.map(contact => (\r\n      <li key={uuidv4()} className={styles.contactList__item}>\r\n        <span className={styles.contactList__elem}> {contact.name}:</span>\r\n        <span>{contact.number} </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={styles.contactList__button}\r\n          onClick={() => onDeleteContact(contact.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactsForList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter = '') => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n  return {\r\n    contactsForList: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../Filter/Filter.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../redux/contactsActions';\r\n\r\nconst Filter = ({ onFilterValue, value }) => (\r\n  <>\r\n    <p className={styles.filter__title}>Find contacts by name:</p>\r\n    <label htmlFor={uuidv4()} />\r\n    <input\r\n      className={styles.filter__input}\r\n      id={uuidv4()}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      onChange={onFilterValue}\r\n      value={value}\r\n    />\r\n  </>\r\n);\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFilterValue: e => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps )(Filter);\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nimport './styles.css';\r\n\r\n// const initialContacts = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './types';\r\n\r\nconst contacts = {\r\n  items: [],\r\n  filter: '',\r\n};\r\n\r\nconst items = (state = contacts.items, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      return [payload, ...state];\r\n\r\n    case actionTypes.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = contacts.filter, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contactsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2bJKL\",\"contactList__item\":\"ContactList_contactList__item__375rQ\",\"contactList__elem\":\"ContactList_contactList__elem__lt044\",\"contactList__button\":\"ContactList_contactList__button__3foOF\"};"],"sourceRoot":""}