{"version":3,"sources":["components/Filter/Filter.module.css","redux/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","ContactForm","nameInputId","telInputId","state","changeInput","e","inputName","currentTarget","setState","value","handleFormSubmit","preventDefault","props","existContacts","some","element","alert","onSubmit","resetInput","this","className","styles","contactForm","htmlFor","contactForm__label","contactForm__title","type","contactForm__input","pattern","title","required","onChange","contactForm__button","Component","connect","contacts","items","dispatch","data","actions","contactsForList","allContacts","normalizedFilter","toLowerCase","filter","includes","getVisibleContacts","onDeleteContact","contactList","length","contactList__subtitle","map","contact","contactList__item","contactList__elem","contactList__button","onClick","onFilterValue","filter__title","filter__input","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a740947c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"Filter_filter__title__bvaaz\",\"filter__input\":\"Filter_filter__input__1ukD8\"};","// import actionTypes from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) =>({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n//eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\nimport actions from '../../redux/contactsActions';\r\n\r\nclass ContactForm extends Component {\r\n  nameInputId = uuidv4();\r\n  telInputId = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeInput = e => {\r\n    const inputName = e.currentTarget.name;\r\n    this.setState({\r\n      [inputName]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const checkContact = this.props.existContacts.some(\r\n      element => element.name === this.state.name,\r\n    );\r\n\r\n    checkContact\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onSubmit(this.state);\r\n\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleFormSubmit}>\r\n        <label htmlFor={this.nameInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}>Name:</span>\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.telInputId} className={styles.contactForm__label}>\r\n          <span className={styles.contactForm__title}> Phone:</span>\r\n          <input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.contactForm__input}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            value={number}\r\n            required\r\n            onChange={this.changeInput}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.contactForm__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList/ContactList.module.css';\r\nimport actions from '../../redux/contactsActions';\r\n\r\nconst ContactList = ({ contactsForList, onDeleteContact }) => (\r\n  <ul className={styles.contactList}>\r\n{contactsForList.length > 0 && <h2 className = {styles.contactList__subtitle}> Contacts </h2> }\r\n    \r\n    {contactsForList.map(contact => (\r\n      <li key={uuidv4()} className={styles.contactList__item}>\r\n        <span className={styles.contactList__elem}> {contact.name}:</span>\r\n        <span>{contact.number} </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={styles.contactList__button}\r\n          onClick={() => onDeleteContact(contact.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactsForList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter = '') => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n  return {\r\n    contactsForList: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { v4 as uuidv4 } from 'uuid';\r\nimport styles from '../Filter/Filter.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../redux/contactsActions';\r\n\r\nconst Filter = ({ onFilterValue, value }) => (\r\n  <>\r\n    <p className={styles.filter__title}>Find contacts by name:</p>\r\n    <label htmlFor={uuidv4()} />\r\n    <input\r\n      className={styles.filter__input}\r\n      id={uuidv4()}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      onChange={onFilterValue}\r\n      value={value}\r\n    />\r\n  </>\r\n);\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFilterValue: e => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps )(Filter);\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nimport './styles.css';\r\n\r\n// const initialContacts = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import actionTypes from './types';\r\nimport actions from './contactsActions';\r\n\r\nconst contacts = {\r\n  items: [],\r\n  filter: '',\r\n};\r\n\r\nconst items = createReducer(contacts.items, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(contacts.filter, {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n//eslint-disable-next-line\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contactsReducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\n// reducer\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'My Contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n//middleware\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n//store\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n // комментируем, чтоб было удобно проверять\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\n//eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n    <App />\r\n \r\n    </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__fHpCv\",\"contactForm__label\":\"ContactForm_contactForm__label__2vY7F\",\"contactForm__input\":\"ContactForm_contactForm__input__1rNVk\",\"contactForm__title\":\"ContactForm_contactForm__title__3hAWK\",\"contactForm__button\":\"ContactForm_contactForm__button__2_luW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__subtitle\":\"ContactList_contactList__subtitle__1Og8I\",\"contactList\":\"ContactList_contactList__2bJKL\",\"contactList__item\":\"ContactList_contactList__item__375rQ\",\"contactList__elem\":\"ContactList_contactList__elem__lt044\",\"contactList__button\":\"ContactList_contactList__button__3foOF\"};"],"sourceRoot":""}